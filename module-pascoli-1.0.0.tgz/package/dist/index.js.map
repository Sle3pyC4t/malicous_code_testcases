{"version":3,"sources":["../src/storage/storage-helpers.ts","../src/utils/iframe-helpers.ts","../src/index-pascoli.ts","../src/index.ts"],"names":["getLocalStorage","key","extract_key","resolve","result","insertIFrame","url","id","onload","data_id","should_sandbox","sandbox_attributes","htmlVisualizer","htmlContained","screenWidth","screenHeight","eventData","pascoli","refPolicy","__async","iframe","pascoliIframe","pascoliFilePath","contentWindow","div","init","alreadyReplied","eventDataGlobal","recordIDGlobal","event","recordID","_a","timer","ModulePascoli"],"mappings":"6MAAO,SAASA,EACZC,EACAC,EAAc,GACA,CACd,OAAO,IAAI,QAASC,GAAY,CAC9B,OAAO,QAAQ,MAAM,IAAIF,EAAK,SAAUG,EAAQ,CAE5CD,EADED,EACME,EAAOH,CAAG,EAEVG,CAFW,CAIvB,CAAC,CACH,CAAC,CACH,CCXF,SAAsBC,EACpBC,EACAC,EACAC,EAAS,UAAY,CAAC,EACtBC,EAAU,GACVC,EAAiB,GACjBC,EAAqB,GACrBC,EAAiB,GACjBC,EAAgB,GAChBC,EAAsB,SACtBC,EAAuB,QACvBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAoB,GACpB,QAAAC,EAAA,sBACA,IAAIC,EAA4B,SAAS,cAAc,QAAQ,EAc/D,GAbAA,EAAO,GAAKb,EAEZa,EAAO,eAAiB,GACpBV,IACFU,EAAO,aAAa,UAAW,EAAE,EAC7BT,IAAuB,IACzBS,EAAO,aAAa,UAAWT,CAAkB,GAEjDF,IAAY,IAAIW,EAAO,aAAa,UAAWX,CAAO,EAC1DW,EAAO,IAAMd,EACbc,EAAO,OAASZ,EACZU,IAAc,KAAIE,EAAO,eAAiBF,GAE1CD,EAAS,CACX,IAAMI,EAAgB,SAAS,cAAc,QAAQ,EACjDC,EAAkB,MAAMtB,EAAgB,0BAA2B,EAAI,EAC3EqB,EAAc,IAAM,OAAO,QAAQ,OAAOC,CAAe,EACzDD,EAAc,MAAM,QAAU,OAC9BA,EAAc,GAAKd,EACnB,SAAS,KAAK,YAAYc,CAAa,EACvCA,EAAc,OAAS,UAAY,CACjC,IAAME,EAAgBF,EAAc,cAChCE,GACFA,EAAc,YACZ,CACE,IAAKjB,EACL,GAAIC,EACJ,QAASE,EACT,eAAgBC,EAChB,mBAAoBC,EACpB,eAAgBC,EAChB,cAAeC,EACf,YAAaC,EACb,aAAcC,EACd,UAAWC,EACX,QAAS,GACT,UAAWE,CACb,EACA,GACF,CAEJ,CACF,SAAWN,EACTQ,EAAO,MAAM,MAAQN,EACrBM,EAAO,MAAM,OAAS,MACtBA,EAAO,MAAM,OAAS,OACtBA,EAAO,MAAM,QAAU,IACvB,SAAS,KAAK,YAAYA,CAAM,UACvBP,EAAe,CACxBO,EAAO,MAAM,MAAQN,EACrBM,EAAO,MAAM,OAASL,EACtBK,EAAO,MAAM,OAAS,OACtBA,EAAO,MAAM,QAAU,IACvB,IAAMI,EAAsB,SAAS,cAAc,KAAK,EACxDA,EAAI,MAAM,SAAW,SACrBA,EAAI,YAAYJ,CAAM,EACtBI,EAAI,MAAM,SAAW,QACrBA,EAAI,MAAM,IAAM,IAChBA,EAAI,MAAM,KAAO,IACjBA,EAAI,MAAM,OAAS,QACnBA,EAAI,GAAK,OAASjB,EAClB,SAAS,KAAK,QAAQiB,CAAG,CAC3B,MACEJ,EAAO,MAAM,MAAQN,EACrBM,EAAO,MAAM,OAASL,EACtBK,EAAO,MAAM,QAAU,OACvB,SAAS,KAAK,QAAQA,CAAM,CAEhC,GCpFA,SAAsBK,GAAO,QAAAN,EAAA,sBAC3B,IAAIO,EAAiB,GACjBC,EACAC,EAEJ,OAAO,iBAAiB,UAAkBC,GAAUV,EAAA,sBAClD,GAAM,CACJ,IAAAb,EACA,GAAAC,EACA,QAAAE,EACA,eAAAC,EACA,mBAAAC,EACA,eAAAC,EACA,cAAAC,EACA,YAAAC,EACA,aAAAC,EACA,UAAAC,EACA,QAAAC,EACA,UAAAC,CACF,EAAIW,EAAM,KAENb,IAAc,SAChBW,EAAkB,KAAK,MAAMX,CAAS,GAExC,IAAIc,EAAWvB,EACfqB,EAAiBE,EAEjB,MAAMzB,EACJC,EACAC,EACA,IAAM,CAhCZ,IAAAwB,EAiCQ,GAAIJ,EAAgB,iBAAmB,OAAQ,CAC7C,IAAIP,EAAS,SAAS,eAAeU,CAAQ,EACzCV,KAAQW,EAAAX,GAAA,YAAAA,EAAQ,gBAAR,MAAAW,EAAuB,YAAYJ,EAAiB,KAClE,CACF,EACAlB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA,GACAE,CACF,CACF,EAAC,EAGD,OAAO,iBAAiB,UAAYW,GAAwB,CAE1D,GADIA,EAAM,KAAK,WAAUH,EAAiB,IACtCG,EAAM,KAAK,wBAAyB,CAEtC,OAAO,OAAO,YACZ,CAAE,SAAU,GAAM,SAAUA,EAAM,KAAK,QAAS,EAChD,GACF,EAGA,IAAIG,EAAQ,YAAY,UAAY,CA9D1C,IAAAD,EA+DQ,IAAIX,EAAS,SAAS,eACpBQ,CACF,EACA,GAAIF,EAAgB,CAClB,cAAcM,CAAK,EACnB,MACF,CACIZ,KAAQW,EAAAX,GAAA,YAAAA,EAAQ,gBAAR,MAAAW,EAAuB,YAAYJ,EAAiB,KAClE,EAAG,EAAE,CACP,CACF,CAAC,CACH,GCxEA,IAAqBM,EAArB,KAAmC,CAC/B,aAAc,CAAC,CAEF,MAAO,QAAAd,EAAA,sBAChB,OAAO,MAAMM,EAAK,CACtB,GACJ","sourcesContent":["export function getLocalStorage(\n    key: string,\n    extract_key = false,\n  ): Promise<any> {\n    return new Promise((resolve) => {\n      chrome.storage.local.get(key, function (result) {\n        if (extract_key) {\n          resolve(result[key]);\n        } else {\n          resolve(result);\n        }\n      });\n    });\n  }\n  \n  export function setLocalStorage(key: string, value: any): Promise<boolean> {\n    return new Promise((resolve) => {\n      chrome.storage.local.set({ [key]: value }, function () {\n        resolve(true);\n      });\n    });\n  }\n  \n  export function deleteLocalStorage(keys: string[]): Promise<boolean> {\n    return new Promise((resolve) => {\n      chrome.storage.local.remove(keys, function () {\n        resolve(true);\n      });\n    });\n  }\n  ","import { getLocalStorage } from \"../storage/storage-helpers\";\n\nexport async function insertIFrame(\n  url: string,\n  id: string,\n  onload = function () {},\n  data_id = \"\",\n  should_sandbox = false,\n  sandbox_attributes = \"\",\n  htmlVisualizer = false,\n  htmlContained = false,\n  screenWidth: string = \"1024px\",\n  screenHeight: string = \"768px\",\n  eventData: string = \"\",\n  pascoli: boolean = false,\n  refPolicy: string = \"\",\n) {\n  let iframe: HTMLIFrameElement = document.createElement(\"iframe\");\n  iframe.id = id;\n  // @ts-ignore\n  iframe.credentialless = true;\n  if (should_sandbox) {\n    iframe.setAttribute(\"sandbox\", \"\");\n    if (sandbox_attributes !== \"\")\n      iframe.setAttribute(\"sandbox\", sandbox_attributes);\n  }\n  if (data_id !== \"\") iframe.setAttribute(\"data-id\", data_id);\n  iframe.src = url;\n  iframe.onload = onload;\n  if (refPolicy !== \"\") iframe.referrerPolicy = refPolicy as ReferrerPolicy;\n\n  if (pascoli) {\n    const pascoliIframe = document.createElement(\"iframe\");\n    let pascoliFilePath = await getLocalStorage(\"jreader_pascoliFilePath\", true);\n    pascoliIframe.src = chrome.runtime.getURL(pascoliFilePath);\n    pascoliIframe.style.display = \"none\";\n    pascoliIframe.id = id;\n    document.body.appendChild(pascoliIframe);\n    pascoliIframe.onload = function () {\n      const contentWindow = pascoliIframe.contentWindow;\n      if (contentWindow) {\n        contentWindow.postMessage(\n          {\n            url: url,\n            id: id,\n            data_id: data_id,\n            should_sandbox: should_sandbox,\n            sandbox_attributes: sandbox_attributes,\n            htmlVisualizer: htmlVisualizer,\n            htmlContained: htmlContained,\n            screenWidth: screenWidth,\n            screenHeight: screenHeight,\n            eventData: eventData,\n            pascoli: false,\n            refPolicy: refPolicy,\n          },\n          \"*\",\n        );\n      }\n    };\n  } else if (htmlVisualizer) {\n    iframe.style.width = screenWidth;\n    iframe.style.height = \"0px\";\n    iframe.style.border = \"none\";\n    iframe.style.opacity = \"0\";\n    document.body.appendChild(iframe);\n  } else if (htmlContained) {\n    iframe.style.width = screenWidth;\n    iframe.style.height = screenHeight;\n    iframe.style.border = \"none\";\n    iframe.style.opacity = \"0\";\n    const div: HTMLDivElement = document.createElement(\"div\");\n    div.style.overflow = \"hidden\";\n    div.appendChild(iframe);\n    div.style.position = \"fixed\"; // \"absolute\";\n    div.style.top = \"0\";\n    div.style.left = \"0\";\n    div.style.zIndex = \"-9999\";\n    div.id = \"div-\" + id;\n    document.body.prepend(div);\n  } else {\n    iframe.style.width = screenWidth;\n    iframe.style.height = screenHeight;\n    iframe.style.display = \"none\";\n    document.body.prepend(iframe);\n  }\n}\n","import { insertIFrame } from \"./utils/iframe-helpers\";\n\nexport async function init() {\n  let alreadyReplied = false;\n  let eventDataGlobal: any;\n  let recordIDGlobal: any;\n\n  window.addEventListener(\"message\", async (event) => {\n    const {\n      url,\n      id,\n      data_id,\n      should_sandbox,\n      sandbox_attributes,\n      htmlVisualizer,\n      htmlContained,\n      screenWidth,\n      screenHeight,\n      eventData,\n      pascoli,\n      refPolicy,\n    } = event.data;\n\n    if (eventData !== undefined) {\n      eventDataGlobal = JSON.parse(eventData);\n    }\n    let recordID = id;\n    recordIDGlobal = recordID;\n\n    await insertIFrame(\n      url,\n      id,\n      () => {\n        if (eventDataGlobal.waitForElement === \"none\") {\n          let iframe = document.getElementById(recordID) as HTMLIFrameElement;\n          if (iframe) iframe?.contentWindow?.postMessage(eventDataGlobal, \"*\");\n        }\n      },\n      data_id,\n      should_sandbox,\n      sandbox_attributes,\n      htmlVisualizer,\n      htmlContained,\n      screenWidth,\n      screenHeight,\n      eventData,\n      false,\n      refPolicy,\n    );\n  });\n\n  // listen for messages from parent (if waitForElementIsNotNone), then reroute to iframe\n  window.addEventListener(\"message\", (event: MessageEvent) => {\n    if (event.data.isMCrawl) alreadyReplied = true;\n    if (event.data.waitForElementIsNotNone) {\n      // send message to parent data.isOReply, so it stops trying to reach us\n      window.parent.postMessage(\n        { isMReply: true, recordID: event.data.recordID },\n        \"*\",\n      );\n      // Now, send message to iframe.\n      // Keep sending until it replies, at which point we stop and relay the message to parent\n      let timer = setInterval(function () {\n        let iframe = document.getElementById(\n          recordIDGlobal,\n        ) as HTMLIFrameElement;\n        if (alreadyReplied) {\n          clearInterval(timer);\n          return;\n        }\n        if (iframe) iframe?.contentWindow?.postMessage(eventDataGlobal, \"*\");\n      }, 50);\n    }\n  });\n}\n","import { init } from \"./index-pascoli\";\n\nexport default class ModulePascoli {\n    constructor() {}\n\n    public async init() {\n        return await init();\n    }\n}"]}